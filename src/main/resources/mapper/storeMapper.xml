<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ict.finalproject.DAO.StoreDAO">

    <select id="getStoreDetail" parameterType="int" resultType="com.ict.finalproject.vo.StoreVO">
     SELECT 
    p.idx, 
    p.title, 
    p.price, 
    CONCAT('http://192.168.1.92:8000/', p.thumImg) AS thumImg,  
    p.ani_title, 
    p.relDT, 
    p.brand, 
    p.fee, 
    p.stock, 
    p.pro_detail, 
    p.category,
    CONCAT('http://192.168.1.92:8000/', MIN(i.detailImg)) AS detailImg 
FROM t_product p
LEFT JOIN t_productimg i ON p.idx = i.pro_idx  
WHERE p.idx = #{storeId}
GROUP BY p.idx, p.title, p.price, p.thumImg, p.ani_title, p.relDT, p.brand, p.fee, p.stock, p.pro_detail, p.category;

    </select>

    <select id="getStoreList" resultType="com.ict.finalproject.vo.StoreVO">
        SELECT 
            idx, title, price, thumImg , ani_title, relDT, brand, fee, stock, pro_detail, category 
        FROM t_product
    </select>

    <!-- 정렬을 위한 필터 (sort 기반 필터) -->
    <select id="getStoreListBySortFilter" parameterType="String" resultType="com.ict.finalproject.vo.StoreVO">
        SELECT * FROM t_product
        <choose>
            <when test="'latest'.equals(filterType)">
                ORDER BY created_date DESC
            </when>
            <when test="'popular'.equals(filterType)">
                ORDER BY popularity DESC
            </when>
            <when test="'high-price'.equals(filterType)">
                ORDER BY price DESC
            </when>
            <when test="'low-price'.equals(filterType)">
                ORDER BY price ASC
            </when>
             <otherwise>
            <!-- 기본 정렬 --> 
            ORDER BY created_date DESC
        </otherwise>
        </choose>
    </select>

    <select id="searchStoreList" parameterType="String" resultType="com.ict.finalproject.vo.StoreVO">
        SELECT * FROM t_product
        WHERE title LIKE CONCAT('%', #{keyword}, '%')
           OR description LIKE CONCAT('%', #{keyword}, '%')
    </select>

    <!-- 카테고리와 재고 기반 필터링 -->
    <select id="getFirstCategoryList" resultType="com.ict.finalproject.vo.ProductFilterVO">
    SELECT DISTINCT f.type
    FROM t_firstcategory f
    JOIN t_product p ON p.category = f.code
    where f.type is not null
    </select>



<!-- <select id="getSubcategoriesByFirstCategory" parameterType="int" resultType="com.ict.finalproject.vo.ProductFilterVO">
SELECT s.type 
FROM t_secondcategory s
JOIN t_firstcategory f ON s.first_code = f.code
WHERE f.code = #{category}
</select> -->

<select id="getSubcategoriesByFirstCategory1">
SELECT s.type 
FROM t_secondcategory s
JOIN t_firstcategory f ON s.first_code = f.code
WHERE f.code = #{category}
</select>

</mapper>
