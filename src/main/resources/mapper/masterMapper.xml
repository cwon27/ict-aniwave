<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ict.finalproject.DAO.MasterDAO">
    <!-- 관리자 페이지 공지사항 등록 -->
    <insert id="insertNotice" parameterType="com.ict.finalproject.vo.MasterVO">
        INSERT INTO t_notice (title, content, adminidx)
        VALUES (#{title}, #{content}, 2)
    </insert>

    <!-- 관리자페이지 자주묻는 질문 등록 -->
    <insert id="insertFAQ" parameterType="com.ict.finalproject.vo.MasterVO">
        insert into t_faq (question,answer,faqtype,adminidx) values(#{question}, #{answer}, #{faqtype} , 2)
    </insert>

    <!-- 관리자 페이지 굿즈 상품 등록 -->
    <insert id="insertStore" parameterType="com.ict.finalproject.vo.MasterVO">
        INSERT INTO t_product
        (title, price, thumimg, relDT, brand, fee, stock, category, pro_detail)
        VALUES
        (#{title}, #{price}, #{thumimg}, #{relDT}, #{brand}, #{fee}, #{stock}, #{category}, #{pro_detail});
    </insert>

    <!-- 관리자페이지 자주묻는 질문 리스트 -->
    <select id="getFAQList" resultType="com.ict.finalproject.vo.MasterVO">
        select f.idx, f.question, ft.type as faqtype , regDT from t_faq f join t_faqtype ft ON f.faqtype = ft.code
    </select>

    <!-- 관리자 페이지 굿즈 상품 테이블 전체 목록 조회 -->
    <select id="getStoreList" resultType="com.ict.finalproject.vo.MasterVO">
        SELECT
        p.idx,
        p.title,
        p.price,
        p.stock,
        p.relDT,
        f.type AS category
        FROM
        t_product p
        LEFT JOIN
        t_firstcategory f ON p.category = f.code
        ORDER BY
        p.idx;
    </select>

    <!-- 관리자페이지 굿즈 상품 총 상품수 구하기 -->
    <select id="getTotalStore">
        select count(*) from t_product
    </select>

    <!-- 관리자페이지 굿즈 상품테이블 카테고리별 카운트 구하기 -->
    <select id="getCategoryCountByCode" resultType="map" parameterType="int">
    SELECT  tf.code AS category_code,  tf.type AS category_type,  COUNT(p.category) AS product_category
    FROM t_firstcategory tf LEFT JOIN t_product p ON p.category = tf.code
    WHERE tf.code = #{categoryCode} GROUP BY tf.code, tf.type
    </select>

    <!-- 커뮤니티 테이블 모든 목록 불러오기 -->
    <select id="getBoardList" resultType="MasterVO">
        SELECT c.idx, tc.type AS category, c.title, u.userid AS author, c.regDT, c.hit, c.commtype
        FROM t_community c LEFT JOIN t_communitytype tc ON c.commtype = tc.code
        LEFT JOIN t_user u ON c.useridx = u.idx ORDER BY c.idx;
    </select>

    <!-- 애니 전체 리스트 불러오기 -->
    <select id="getAniAllList" resultType="MasterVO">
        select a.idx, a.title, a.anitype, at.type as anitype_type ,a.agetype, ag.type as age_type , a.director, a.outline, a.regDT
        from t_animation a left join t_anitype at on a.anitype = at.code
        left join t_agetype ag on a.agetype = ag.code;
    </select>


    <select id="getAdminIdxByAdminid" resultType="int">
        SELECT idx
        FROM t_admin
        WHERE adminid = #{adminid}
    </select>

    <!-- 관리자페이지 공지사항 목록 불러오기  -->
    <select id="getNoticeList">
        SELECT n.idx, n.title, n.content, n.regDT, u.username AS admin_name
        FROM t_notice n
        JOIN t_user u ON n.adminidx = u.idx;
    </select>

    <!-- 신고 추가 -->
    <insert id="insertReport">
        INSERT INTO t_ban (useridx, reason, stopDT, endDT)
        VALUES ((SELECT idx FROM t_user WHERE userid = #{userid}), #{reason}, #{stopDT}, #{endDT})
    </insert>

    <!-- 신고 테이블에 아이디 있는지 체크 -->
    <select id="isUserBanned" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN TRUE ELSE FALSE END
        FROM t_ban b
        JOIN t_user u ON u.idx = b.useridx
        WHERE u.userid = #{userid}
        AND NOW() BETWEEN b.stopDT AND b.endDT
    </select>

    <!-- 탈퇴 테이블에 아이디 있는지 체크 -->
    <select id="isUserDeleted" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN TRUE ELSE FALSE END
        FROM t_user u
        JOIN t_userDel ud ON u.idx = ud.useridx
        WHERE u.idx = #{idx}
    </select>

    <!-- 유저테이블에서 실제로 회원인지 아닌지 조회 -->
    <select id="findUserIdxByUserid" resultType="int">
        SELECT idx
        FROM t_user
        WHERE userid = #{userid}
    </select>
</mapper>