<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ict.finalproject.DAO.MemberDAO">
    <!-- 회원 가입 시 사용되는 쿼리 -->
    <insert id="memberCreate" parameterType="memberVO">
        insert into t_user(userid, userpwd, username, email, zipcode, addr, birth)
        values(#{userid}, #{userpwd}, #{username}, #{email}, #{zipcode}, #{addr}, #{birth})
    </insert>

    <!-- 로그인 시 사용되는 쿼리 (권한 정보 포함) -->
    <select id="memberLogin" parameterType="map" resultType="MemberVO">
        select userid, userpwd, username
        from t_user
        where userid = #{userid}
    </select>

    <select id="getUseridx" parameterType="String" resultType="Integer">
        select idx from t_user where userid = #{param1}
    </select>

    <!-- 전체 멤버 리스트 구하기 -->
    <select id="getMemberList" resultType="com.ict.finalproject.vo.MemberVO">
        select idx, userid, username, email, regDT, point from t_user
    </select>

    <!-- 총 유저수 구하기 -->
    <select id="getTotalUser">
        SELECT COUNT(*) FROM t_user
    </select>

    <!--오늘 가입한 유저수 구하기 -->
    <select id="getNewUsers">
        SELECT COUNT(*) FROM t_user WHERE DATE(regDT) = CURDATE()
    </select>

    <!-- 최근 7일간 가입한 유저수 구하기 -->
    <select id="getNewSignups">
        SELECT COUNT(*) FROM t_user WHERE regDT >= CURDATE() - INTERVAL 7 DAY
    </select>

    <!-- 리뷰 작성전 리스트 구하기-->
    <select id="getReviewBefore" resultType="com.ict.finalproject.DTO.ReviewBeforeDTO">
        SELECT ol.idx AS orderList_idx, p.thumImg, p.title, p.price, ol.amount, ol.orderState, p.idx
        FROM T_orderList ol
        JOIN T_order o ON ol.order_idx = o.idx
        JOIN T_product p ON ol.pro_idx = p.idx
        LEFT JOIN T_review r ON ol.idx = r.orderList_idx
        WHERE ol.orderState = 6
        AND o.useridx = ${param1}  -- 토큰에서 가져온 useridx
        AND r.orderList_idx IS NULL
    </select>

    <!-- 리뷰 작성 -->
    <insert id="saveReview" parameterType="com.ict.finalproject.vo.ReviewVO">
        INSERT INTO T_review (useridx, orderList_idx, content, grade, imgfile1, imgfile2)
        VALUES (#{useridx}, #{orderList_idx}, #{content}, #{grade}, #{imgfile1}, #{imgfile2});
    </insert>

    <select id="getReviewCompleted" resultType="com.ict.finalproject.DTO.ReviewCompletedDTO">
        SELECT r.*, p.idx AS pro_idx, p.title AS pro_title, p.thumImg As pro_thumImg, p.price As pro_price, o.amount As order_amount, DATE_FORMAT(r.regDT, '%Y.%m.%d') AS formatted_regDT
        FROM T_review r
        JOIN T_orderList o ON r.orderList_idx = o.idx
        JOIN T_product p ON o.pro_idx = p.idx
        WHERE r.delState = 0 and r.useridx=${param1} and r.orderList_idx IS not NULL;
    </select>
</mapper>